plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()
}

sourceSets {
	test {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath

		compileClasspath += client.compileClasspath
		runtimeClasspath += client.runtimeClasspath
	}
}

loom {
	mods {
		"autocrafters" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runs {
		create("testServer") {
			server()

			name "Test Minecraft Server"
			vmArg "-Dfabric-api.gametest"
			runDir "run/saves"
			source sourceSets.test
		}

		create("testClient") {
			client()

			name "Test Minecraft Client"
			programArgs "--quickPlaySingleplayer", "world"
			programArgs "--username", "DEV"
			source sourceSets.test
		}
	}
}

runTestClient {
	dependsOn.add(runTestServer)
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

processTestResources {
	dependsOn.add(processResources)
	from("build/resources/test") {
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
		into "../main"
	}
	from("build/resources/main") {
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
		into "../test"
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

test {
	dependsOn.add(runTestServer)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}